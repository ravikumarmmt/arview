<?xml version="1.0" encoding="UTF-8"?>
<project name="arview" default="build">
    <!-- intended to be ran before upload to the CI server -->
    <target name="pre-upload" depends="phpcs, phpmd" />
    
    <target name="build" depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpcb"/>

    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="prepare" unless="prepare.done" depends="clean,generate-code" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <property name="prepare.done" value="true"/>
    </target>

	 <target name="lint" description="Perform syntax check of sourcecode files">
	  <apply executable="php" taskname="lint">
	   <arg value="-l" />

           <fileset dir="${basedir}/controllers/admin/">
            <include name="**/*.php" />
            <modified />
           </fileset>

           <fileset dir="${basedir}/controllers/hook/">
            <include name="**/*.php" />
            <modified />
           </fileset>          
          
           <fileset dir="${basedir}">
               <include name="**/*.php" />
               <!-- exclude the tests directory, repeat line below to exclude more -->
               <exclude name="install/**" />
               <modified />
           </fileset>

           <fileset dir="${basedir}">
               <include name="**/*.php" />
               <!-- exclude the tests directory, repeat line below to exclude more -->
               <exclude name="views/**" />
               <modified />
           </fileset>          
        
           <fileset dir="${basedir}/">
               <include name="**/*.php" />
               <modified />
           </fileset>
          
       </apply>
   </target>

   <target name="phploc" description="Measure project size using PHPLOC">
          <!-- <exec executable="${basedir}/build/tools/phploc.phar"> -->
           <exec executable="phploc">
           <!-- exclude tests directory -->
           <arg value="--exclude" />
           <arg path="${basedir}/views" />
            <arg value="--log-csv"/>
            <arg path="${basedir}/build/logs/phploc.csv"/>
            <arg value="--log-xml"/>
            <arg path="${basedir}/build/logs/phploc.xml"/>
           <arg path="${basedir}" />
       </exec>
   </target>    
    
	
    <target name="phploc-ci" depends="prepare"
            description="Measure project size using PHPLOC and log result in CSV and XML format">
        <exec executable="phploc" >
           <!-- exclude tests directory -->
           <arg value="--exclude" />
           <arg path="${basedir}/views" />         
            <arg value="--log-csv"/>
            <arg path="${basedir}/build/logs/phploc.csv"/>
            <arg value="--log-xml"/>
            <arg path="${basedir}/build/logs/phploc.xml"/>
           <arg path="${basedir}" />
        </exec>
    </target>
    
    

    <target name="pdepend" depends="prepare" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <!-- <arg value="--ignore=${basedir}/views,${basedir}/docs" /> -->
            <arg value="--ignore=${basedir}/views" />
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print result in text format">
        <exec executable="phpmd">
            <arg path="${basedir}"/>
            <arg value="text"/>
            <arg path="${basedir}/build/phpmd.xml"/>
        </exec>
    </target>

    <target name="phpmd-ci" depends="prepare"
            description="Perform project mess detection using PHPMD and log result in XML format">
        <exec executable="phpmd" >
            <arg path="${basedir}"/>
            <arg value="xml"/>
            <arg path="${basedir}/build/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg path="${basedir}/build/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print result in text format">
        <exec executable="phpcs" taskname="phpcs">
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
            
            <arg value="--ignore=${basedir}/views" />
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="phpcs-ci" depends="prepare"
            description="Find coding standard violations using PHP_CodeSniffer and log result in XML format">
        <exec executable="phpcs" output="/dev/null" >
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
            <arg value="--standard=PSR2"/>
            <arg value="--extensions=php"/>
           <arg value="--ignore=${basedir}/views" />
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="${basedir}/build/tools/phpcpd.phar" taskname="phpcpd">
            <arg path="${basedir}"/>
        </exec>
    </target>

    <target name="phpcpd-ci" depends="prepare"
            description="Find duplicate code using PHPCPD and log result in XML format">
        <exec executable="${basedir}/build/tools/phpcpd.phar" taskname="phpcpd">
            <arg value="--log-pmd"/>
            <arg path="${basedir}/build/logs/pmd-cpd.xml"/>
            <arg path="${basedir}"/>
        </exec>
    </target>

 
</project>
